Number of subarrays with sum k
https://leetcode.com/problems/subarray-sum-equals-k/
Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.
1 <= nums.length <= 2 * 104
-1000 <= nums[i] <= 1000
-107 <= k <= 107
 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2

Brute force
class Solution {
    public int subarraySum(int[] a, int k) {
        int count =0;
        for(int i = 0;i<a.length;i++)
        {
            int sum= 0;
            for(int j=i;j<a.length;j++)
            {
                sum = sum + a[j];
            if(sum == k)
            {
                count++;
            }
            }

        }
        return count;
    }
}

Optimized
class Solution {
    public int subarraySum(int[] a, int k) {
        int sum = 0;
        int count = 0;

        Map<Integer,Integer> map = new HashMap<>();
                map.put(0,1);
        for(int i=0;i<a.length;i++)
        {
            sum+=a[i];
            if(map.containsKey(sum-k))
            {
                count += map.get(sum-k);
            }
            if(map.containsKey(sum))
            {
                 map.put(sum,map.get(sum)+1);
            }else{
                                map.put(sum,1);

            }
               
            
        }
        return count;
    }
}